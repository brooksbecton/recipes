{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMdx","edges","tags","group","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","className","style","marginBottom","slice","map","_ref","node","frontmatter","fields","slug","key","margin","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","_ref2","fieldValue","totalCount","tag","tagPath","length","React","Component","pageQuery","FooterButton","react__WEBPACK_IMPORTED_MODULE_7___default","Object","assign","_objectSpread","color","backgroundColor","border","padding","children","Layout","_useState","useState","isShowingSearch","setIsShowingSearch","marginLeft","marginRight","display","position","flexDirection","justifyContent","height","bottom","width","Fragment","type","name","placeholder","onClick","prevIsShowingSearch","alignSelf","alignContent","gatsby__WEBPACK_IMPORTED_MODULE_8__","textDecoration","window","history","back","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-0581034e0a919a0eef5f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMdx.edges\n    const tags = data.allMdx.group || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n\n        <div\n          className=\"nes-container with-title\"\n          style={{ marginBottom: \"60px\" }}\n        >\n          <h2 className=\"title\">Recent Recipes</h2>\n          <ul className=\"nes-list is-circle\">\n            {posts.slice(0, 9).map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <li key={node.fields.slug}>\n                  <article>\n                    <header>\n                      <h3 style={{ margin: 0, marginBottom: \"3%\" }}>\n                        <Link\n                          style={{ boxShadow: `none` }}\n                          to={node.fields.slug}\n                        >\n                          {title}\n                        </Link>\n                      </h3>\n                    </header>\n                  </article>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n        <div\n          className=\"nes-container with-title\"\n          style={{ marginBottom: \"60px\" }}\n        >\n          <h2 className=\"title\">Tags</h2>\n          <ul className=\"nes-list is-circle\">\n            {tags.slice(0, 9).map(({ fieldValue, totalCount }) => {\n              const tag = fieldValue\n              const tagPath = `/tags/`\n              return (\n                <li key={tagPath}>\n                  <article>\n                    <header>\n                      <p style={{ margin: 0, marginBottom: \"3%\" }}>\n                        <Link\n                          style={{ boxShadow: `none` }}\n                          to={`${tagPath}/${tag}`}\n                        >\n                          {tag} ({totalCount})\n                        </Link>\n                      </p>\n                    </header>\n                  </article>\n                </li>\n              )\n            })}\n            <li>\n              <article>\n                <header>\n                  <p style={{ margin: 0, marginBottom: \"3%\" }}>\n                    <Link style={{ boxShadow: `none` }} to=\"tags\">\n                      All Tags ({tags.length})\n                    </Link>\n                  </p>\n                </header>\n              </article>\n            </li>\n          </ul>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst FooterButton = props => {\n  return (\n    <button\n      {...props}\n      style={{\n        color: \"white\",\n        backgroundColor: \"transparent\",\n        border: 0,\n        padding: 0,\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nconst Layout = ({ children }) => {\n  const [isShowingSearch, setIsShowingSearch] = useState(false)\n  return (\n    <div\n      style={{\n        marginBottom: \"2%\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          padding: \"5%\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <main>{children}</main>\n      </div>\n      <footer\n        className=\"nes-container is-dark\"\n        style={{\n          display: \"flex\",\n          position: \"fixed\",\n          flexDirection: \"row \",\n          justifyContent: \"space-between\",\n          height: \"60px\",\n          bottom: 0,\n          width: \"100%\",\n          margin: 0,\n          padding: isShowingSearch ? 5 : 16,\n        }}\n      >\n        {isShowingSearch ? (\n          <>\n            {\" \"}\n            <input\n              className=\"nes-input\"\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"SEARCH\"\n            />{\" \"}\n            <button onClick={() => setIsShowingSearch(false)}>CANCEL</button>\n          </>\n        ) : (\n          <>\n            <FooterButton\n              onClick={() =>\n                setIsShowingSearch(prevIsShowingSearch => !prevIsShowingSearch)\n              }\n            >\n              SEARCH\n            </FooterButton>\n            <div\n              style={{\n                alignSelf: \"center\",\n                alignContent: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <nav>\n                <Link\n                  style={{\n                    boxShadow: 0,\n                    color: \"white\",\n                    textDecoration: \"none\",\n                    marginRight: 20,\n                  }}\n                  to=\"/\"\n                >\n                  HOME\n                </Link>\n                <FooterButton onClick={() => window.history.back()}>\n                  BACK\n                </FooterButton>\n              </nav>\n            </div>\n          </>\n        )}\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}