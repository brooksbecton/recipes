{"componentChunkName":"component---src-templates-blog-post-js","path":"/boiled-eggs/","result":{"data":{"site":{"siteMetadata":{"title":"Recipes","author":"Brooks Becton"}},"mdx":{"id":"a21ff1e7-32d8-5cf1-9d66-bcafbcc2f0d1","excerpt":"Ingredients Recipe Place eggs into a saucepan and pour in cold water to cover; place over high heat. When the water just starts to simmer, turn off heat, coverâ€¦","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Boiled Eggs\",\n  \"date\": \"2019-10-23T14:15:04+00:00\",\n  \"tags\": [\"vegetarian\", \"eggs\", \"breakfast\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Ingredients\"), mdx(IngredientList, {\n    ingredients: [\"6 eggs, older eggs prefered\"],\n    mdxType: \"IngredientList\"\n  }), mdx(\"h2\", null, \"Recipe\"), mdx(\"p\", null, \"Place eggs into a saucepan and pour in cold water to cover; place over high heat. When the water just starts to simmer, turn off heat, cover pan with a lid, and let stand for 17 minutes. Don't peek.\\nPour out the hot water and pour cold water over eggs. Drain and refill with cold water; let stand until eggs are cool, about 20 minutes. Peel eggs under running water.\"), mdx(\"p\", null, \"Expire in 1 week\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Boiled Eggs","date":"October 23, 2019","description":null,"tags":["vegetarian","eggs","breakfast"]}}},"pageContext":{"slug":"/boiled-eggs/","previous":{"id":"5e67169b-8f27-5c79-9fd0-b244962013c6","fields":{"slug":"/apple-sweet-potato-hash/"},"frontmatter":{"tags":["vegetarian","apples","side"],"title":"Apple and Sweet Potato Hash"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Apple and Sweet Potato Hash\",\n  \"date\": \"2019-10-23T14:15:04+00:00\",\n  \"tags\": [\"vegetarian\", \"apples\", \"side\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Ingredients\"), mdx(IngredientList, {\n    ingredients: [\"2 sweet potatoes, cubed\", \"2 Apples, cubed\", \"Olive Oil\", \"1 small onion, diced\", \"1 tbs garlic, minced\", \"Salt\", \"Pepper\", \"1 tbs Cinnamon\", \"2 tbs of Brown Sugar, White Sugar, Honey\"],\n    mdxType: \"IngredientList\"\n  }), mdx(\"h2\", null, \"Recipe\"), mdx(\"p\", null, \"Add oil to pan over medium heat. Add onions and salt and pepper to taste. Cook until translucent. Add garlic and cook for 2-3 minutes until golden, add more oil if necessary. Remove onions and garlic from heat. Add sweet potatoes and cook until slightly underdone then add apples and onion mixture to pan.\"), mdx(\"p\", null, \"Continue cooking until sweet potatoes have the texture of potato salad. Like, some sweet potatoes falling apart, apples still have a bite, and onions tender and sweet.\"), mdx(\"p\", null, \"Finish with cinnamon and sweetener. Cook just until sugar has dissolved into a syrup and is mixed well.\"), mdx(\"h2\", null, \"Notes\"), mdx(\"p\", null, \"Fresh herbs could be good to finish here. Maybe sage or rosemary.\"), mdx(\"p\", null, \"Maybe toasted chopped nuts on the finish too.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"next":{"id":"d5eaa65a-0acd-5d11-bfe2-19afec248a62","fields":{"slug":"/sweet-potato-fries/"},"frontmatter":{"tags":["vegetarian","potato","side"],"title":"Sweet Potato Fries"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sweet Potato Fries\",\n  \"date\": \"2019-11-23T14:15:04+00:00\",\n  \"tags\": [\"vegetarian\", \"potato\", \"side\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Ingredients\"), mdx(IngredientList, {\n    ingredients: [\"Sweet Potato\", \"Garlic Powder\", \"1 Tsp Olive Oil\", \"Paprkia\", \"Salt\", \"Pepper\"],\n    mdxType: \"IngredientList\"\n  }), mdx(\"h2\", null, \"Recipe\"), mdx(\"p\", null, \"Preheat oven to 400 degrees F.\"), mdx(\"p\", null, \"Line half sheet pan with parchment paper. Cut potato into into fry shapes.\\nThey can be whatever shape you want, but the sizes should be similar for even cooking.\\nPut potato in large bowl and add olive oil and toss to coat. Less oil is better here.\\nAdd seasonings while tossing and transfer to sheet pan.\"), mdx(\"p\", null, \"Bake for 15 minutes and wang jangle. Repeat until have desired color and texture.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}}}}