{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMdx","edges","tags","group","location","className","style","marginBottom","slice","map","node","frontmatter","fields","slug","key","boxShadow","to","excerpt","length","tag","fieldValue","totalCount","tagPath","margin","React","Component","pageQuery"],"mappings":"6MAMMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,OAAOC,MACpBC,EAAOV,EAAKQ,OAAOG,OAAS,GAElC,OACE,kBAAC,IAAD,CAAQC,SAAUX,KAAKC,MAAMU,SAAUN,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,cAEX,yBAAKO,UAAU,YAAYC,MAAO,CAAEC,aAAc,SAChD,wBAAIF,UAAU,SAAd,kBACA,wBAAIA,UAAU,sBACXN,EAAMS,MAAM,EAAG,GAAGC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAClBZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BAASR,UAAU,kDACjB,gCACE,uBAAGA,UAAU,0BACX,kBAAC,OAAD,CACEC,MAAO,CAAES,UAAU,QACnBC,GAAIN,EAAKE,OAAOC,MAEff,KAIP,uBAAGO,UAAU,2BACVK,EAAKO,QAAQT,MAAM,GAAIE,EAAKO,QAAQC,SAEvC,6BACGR,EAAKC,YAAYT,KAAKO,KAAI,SAAAU,GACzB,OACE,0BAAML,IAAKK,EAAKd,UAAU,uFAA1B,IACIc,cAWtB,yBAAKd,UAAU,YAAYC,MAAO,CAAEC,aAAc,SAChD,wBAAIF,UAAU,SAAd,QACA,wBAAIA,UAAU,sBACXH,EAAKM,MAAM,EAAG,GAAGC,KAAI,YAAiC,IAA9BW,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC7BF,EAAMC,EAEZ,OACE,wBAAIN,IAFO,SAEQK,GACjB,iCACE,gCACE,kBAAC,OAAD,CACEb,MAAO,CAAES,UAAU,QACnBC,GAAOM,UAAWH,GAElB,uBAAGd,UAAU,uFAAb,IACIc,EADJ,KACWE,EADX,YASZ,4BACE,iCACE,gCACE,uBAAGf,MAAO,CAAEiB,OAAQ,EAAGhB,aAAc,OACnC,kBAAC,OAAD,CAAMD,MAAO,CAAES,UAAU,QAAWC,GAAG,SAAvC,aACad,EAAKgB,OADlB,a,GA1EIM,IAAMC,WAwFfnC,YAER,IAAMoC,EAAS","file":"component---src-pages-index-js-7d1279b9ebfdb9cffde5.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMdx.edges\n    const tags = data.allMdx.group || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n\n        <div className=\"container\" style={{ marginBottom: \"60px\" }}>\n          <h2 className=\"title\">Recent Recipes</h2>\n          <ul className=\"nes-list is-circle\">\n            {posts.slice(0, 9).map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <li key={node.fields.slug}>\n                  <article className=\"p-5 max-w-sm rounded overflow-hidden shadow-lg\">\n                    <header>\n                      <p className=\"font-bold text-xl mb-2\">\n                        <Link\n                          style={{ boxShadow: `none` }}\n                          to={node.fields.slug}\n                        >\n                          {title}\n                        </Link>\n                      </p>\n                    </header>\n                    <p className=\"text-gray-700 text-base\">\n                      {node.excerpt.slice(19, node.excerpt.length)}\n                    </p>\n                    <div>\n                      {node.frontmatter.tags.map(tag => {\n                        return (\n                          <span key={tag} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700\">\n                            #{tag}\n                          </span>\n                        )\n                      })}\n                    </div>\n                  </article>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n        <div className=\"container\" style={{ marginBottom: \"60px\" }}>\n          <h2 className=\"title\">Tags</h2>\n          <ul className=\"nes-list is-circle\">\n            {tags.slice(0, 9).map(({ fieldValue, totalCount }) => {\n              const tag = fieldValue\n              const tagPath = `/tags/`\n              return (\n                <li key={tagPath + tag}>\n                  <article>\n                    <header>\n                      <Link\n                        style={{ boxShadow: `none` }}\n                        to={`${tagPath}/${tag}`}\n                      >\n                        <p className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700\">\n                          #{tag} ({totalCount})\n                        </p>\n                      </Link>\n                    </header>\n                  </article>\n                </li>\n              )\n            })}\n            <li>\n              <article>\n                <header>\n                  <p style={{ margin: 0, marginBottom: \"3%\" }}>\n                    <Link style={{ boxShadow: `none` }} to=\"/tags\">\n                      All Tags ({tags.length})\n                    </Link>\n                  </p>\n                </header>\n              </article>\n            </li>\n          </ul>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}