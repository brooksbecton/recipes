{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","h1,h2,h3,h4,h5","fontFamily","fontStyle","googleFonts","typography","Typography","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_utils_typography__WEBPACK_IMPORTED_MODULE_2__","Layout","_ref","children","style","marginBottom","marginLeft","marginRight","maxWidth","padding","color","display","position","justifyContent","backgroundColor","width","height","bottom","alignSelf","alignContent","textAlign","textDecoration","to","border","onClick","window","history","back","type","name","placeholder","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-203fd68c72cade8124a7.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    \"h1,h2,h3,h4,h5\": {\n      fontFamily: \"Josefin Slab\",\n      fontStyle: \"italic\",\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Layout = ({ children }) => {\n  return (\n    <div\n      style={{\n        marginBottom: rhythm(2),\n      }}\n    >\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `0 ${rhythm(1.5)}`,\n        }}\n      >\n        <main>{children}</main>\n      </div>\n      <div>\n        <footer\n          style={{\n            color: \"white\",\n            display: \"flex\",\n            position: \"fixed\",\n            justifyContent: \"space-between\",\n            backgroundColor: \"#3F4868\",\n            width: \"100vw\",\n            height: \"50px\",\n            bottom: 0,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignSelf: \"center\",\n              alignContent: \"center\",\n              textAlign: \"center\",\n            }}\n          >\n            <Link style={{ color: \"white\", textDecoration: \"none\" }} to=\"/\">\n              Home\n            </Link>\n            <button\n              style={{\n                color: \"white\",\n                backgroundColor: \"transparent\",\n                border: 0,\n              }}\n              onClick={() => window.history.back()}\n            >\n              Back\n            </button>\n          </div>\n\n          <div style={{ alignSelf: \"center\" }}>\n            <input type=\"text\" name=\"search\" placeholder=\"Search\" />\n            <button\n              style={{ backgroundColor: \"white\", height: \"34px\", border: 0 }}\n            >\n              X\n            </button>\n          </div>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}