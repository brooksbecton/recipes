{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","location","_components_seo__WEBPACK_IMPORTED_MODULE_2__","React","Component","pageQuery","FooterButton","react__WEBPACK_IMPORTED_MODULE_7___default","Object","assign","style","_objectSpread","color","backgroundColor","border","padding","children","Layout","_ref","_useState","useState","isShowingSearch","setIsShowingSearch","marginBottom","marginLeft","marginRight","className","display","position","flexDirection","justifyContent","height","bottom","width","margin","Fragment","type","name","placeholder","onClick","prevIsShowingSearch","alignSelf","alignContent","gatsby__WEBPACK_IMPORTED_MODULE_8__","boxShadow","textDecoration","to","window","history","back","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-404-js-fba6757c45c3a70881f8.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst FooterButton = props => {\n  return (\n    <button\n      {...props}\n      style={{\n        color: \"white\",\n        backgroundColor: \"transparent\",\n        border: 0,\n        padding: 0,\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nconst Layout = ({ children }) => {\n  const [isShowingSearch, setIsShowingSearch] = useState(false)\n  return (\n    <div\n      style={{\n        marginBottom: \"2%\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          padding: \"5%\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <main>{children}</main>\n      </div>\n      <footer\n        className=\"nes-container is-dark\"\n        style={{\n          display: \"flex\",\n          position: \"fixed\",\n          flexDirection: \"row \",\n          justifyContent: \"space-between\",\n          height: \"60px\",\n          bottom: 0,\n          width: \"100%\",\n          margin: 0,\n          padding: isShowingSearch ? 5 : 16,\n        }}\n      >\n        {isShowingSearch ? (\n          <>\n            {\" \"}\n            <input\n              className=\"nes-input\"\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"SEARCH\"\n            />{\" \"}\n            <button onClick={() => setIsShowingSearch(false)}>CANCEL</button>\n          </>\n        ) : (\n          <>\n            <FooterButton\n              onClick={() =>\n                setIsShowingSearch(prevIsShowingSearch => !prevIsShowingSearch)\n              }\n            >\n              SEARCH\n            </FooterButton>\n            <div\n              style={{\n                alignSelf: \"center\",\n                alignContent: \"center\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <nav>\n                <Link\n                  style={{\n                    boxShadow: 0,\n                    color: \"white\",\n                    textDecoration: \"none\",\n                    marginRight: 20,\n                  }}\n                  to=\"/\"\n                >\n                  HOME\n                </Link>\n                <FooterButton onClick={() => window.history.back()}>\n                  BACK\n                </FooterButton>\n              </nav>\n            </div>\n          </>\n        )}\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}