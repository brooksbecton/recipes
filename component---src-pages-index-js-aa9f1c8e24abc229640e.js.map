{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","tags","group","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","slice","map","_ref","node","frontmatter","fields","slug","key","style","margin","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","_ref2","fieldValue","totalCount","tag","tagPath","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","h1,h2,h3,h4,h5","fontFamily","fontStyle","googleFonts","typography","Typography","Layout","children","marginLeft","marginRight","maxWidth","padding","color","display","position","alignContent","backgroundColor","width","height","bottom","onClick","window","history","back","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-aa9f1c8e24abc229640e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const tags = data.allMarkdownRemark.group || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <h2>Recent Recipes</h2>\n        <ul>\n          {posts.slice(0, 9).map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <li key={node.fields.slug}>\n                <article>\n                  <header>\n                    <h3 style={{ margin: 0, marginBottom: rhythm(0.5) }}>\n                      <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                        {title}\n                      </Link>\n                    </h3>\n                  </header>\n                </article>\n              </li>\n            )\n          })}\n        </ul>\n        <Link style={{ boxShadow: `none` }} to={`/tags/`}>\n          <h2>Tags</h2>\n        </Link>\n        <ul>\n          {tags.slice(0, 9).map(({ fieldValue, totalCount }) => {\n            const tag = fieldValue\n            const tagPath = `/tags/${tag}`\n            return (\n              <li key={tagPath}>\n                <article>\n                  <header>\n                    <h3 style={{ margin: 0, marginBottom: rhythm(0.5) }}>\n                      <Link style={{ boxShadow: `none` }} to={tagPath}>\n                        {tag} ({totalCount})\n                      </Link>\n                    </h3>\n                  </header>\n                </article>\n              </li>\n            )\n          })}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    \"h1,h2,h3,h4,h5\": {\n      fontFamily: \"Josefin Slab\",\n      fontStyle: \"italic\",\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport { rhythm } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { children } = this.props\n\n    return (\n      <div\n        style={{\n          marginBottom: rhythm(2),\n        }}\n      >\n        <div\n          style={{\n            marginLeft: `auto`,\n            marginRight: `auto`,\n            maxWidth: rhythm(24),\n            padding: `0 ${rhythm(1.5)}`,\n          }}\n        >\n          <main>{children}</main>\n        </div>\n        <div>\n          <footer\n            style={{\n              color: \"white\",\n              display: \"flex\",\n              position: \"fixed\",\n              alignContent: \"center\",\n              backgroundColor: \"#3F4868\",\n              width: \"100vw\",\n              height: \"50px\",\n              bottom: 0,\n              padding: \"10px\",\n            }}\n          >\n            <button\n              style={{ color: \"white\" }}\n              onClick={() => window.history.back()}\n            >\n              Back\n            </button>\n          </footer>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}