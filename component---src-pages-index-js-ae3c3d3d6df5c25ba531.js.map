{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","tags","group","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","slice","map","_ref","node","frontmatter","fields","slug","key","style","margin","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","_ref2","fieldValue","totalCount","tag","tagPath","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","Layout","children","marginLeft","marginRight","padding","color","display","position","flexDirection","justifyContent","backgroundColor","width","height","bottom","alignSelf","alignContent","fontSize","paddingRight","textDecoration","role","aria-label","border","onClick","window","history","back","className","type","name","placeholder","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-ae3c3d3d6df5c25ba531.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const tags = data.allMarkdownRemark.group || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <h2>Recent Recipes</h2>\n        <ul>\n          {posts.slice(0, 9).map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <li key={node.fields.slug}>\n                <article>\n                  <header>\n                    <h3 style={{ margin: 0, marginBottom: '3%' }}>\n                      <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                        {title}\n                      </Link>\n                    </h3>\n                  </header>\n                </article>\n              </li>\n            )\n          })}\n        </ul>\n        <Link style={{ boxShadow: `none` }} to={`/tags/`}>\n          <h2>Tags</h2>\n        </Link>\n        <ul>\n          {tags.slice(0, 9).map(({ fieldValue, totalCount }) => {\n            const tag = fieldValue\n            const tagPath = `/tags/${tag}`\n            return (\n              <li key={tagPath}>\n                <article>\n                  <header>\n                    <h3 style={{ margin: 0, marginBottom: '3%' }}>\n                      <Link style={{ boxShadow: `none` }} to={tagPath}>\n                        {tag} ({totalCount})\n                      </Link>\n                    </h3>\n                  </header>\n                </article>\n              </li>\n            )\n          })}\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport './layout.css'\nconst Layout = ({ children }) => {\n  return (\n    <div\n      style={{\n        marginBottom: \"2%\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          padding: '5%',\n          marginBottom: '50px'\n\n        }}\n      >\n        <main>{children}</main>\n      </div>\n      <div>\n        <footer\n          style={{\n            color: \"white\",\n            display: \"flex\",\n            position: \"fixed\",\n            flexDirection: 'row-reverse',\n            justifyContent: \"space-between\",\n            backgroundColor: \"#3F4868\",\n            width: \"100vw\",\n            height: \"60px\",\n            bottom: 0,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignSelf: \"center\",\n              alignContent: \"center\",\n              fontSize: \"29px\",\n              paddingRight: \"15px\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Link\n              style={{ boxShadow: 0, color: \"white\", textDecoration: \"none\" }}\n              to=\"/\"\n            >\n              <span role=\"img\" aria-label=\"Go Home\">\n                üè†\n              </span>\n            </Link>\n            <button\n              style={{\n                color: \"white\",\n                backgroundColor: \"transparent\",\n                border: 0,\n              }}\n              onClick={() => window.history.back()}\n            >\n              <span role=\"img\" aria-label=\"Go to previous page\">\n                ‚Ü©Ô∏è\n              </span>\n            </button>\n          </div>\n          <div className='nes-field' style={{ alignSelf: \"center\" }}>\n            <input\n              className=\"nes-input\"\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search\"\n            />\n          </div>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}