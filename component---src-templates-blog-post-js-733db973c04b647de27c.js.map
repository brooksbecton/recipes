{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","frontmatter","description","excerpt","style","listStyle","display","flexDirection","margin","tags","map","tag","index","array","key","border","paddingLeft","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","length","dangerouslySetInnerHTML","__html","html","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","Layout","_ref","children","marginBottom","marginLeft","marginRight","padding","className","position","justifyContent","height","bottom","width","alignSelf","alignContent","boxShadow","color","textDecoration","backgroundColor","onClick","window","history","back","type","name","placeholder","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-templates-blog-post-js-733db973c04b647de27c.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n           \n            >\n              {post.frontmatter.title}\n            </h1>\n\n            <ul\n              style={{\n                listStyle: \"none\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                margin: 0,\n              }}\n            >\n              {this.props.data.markdownRemark.frontmatter.tags.map(\n                (tag, index, array) => {\n                  return (\n                    <li\n                      key={tag}\n                      style={{\n                        border: \"none\",\n                        paddingLeft: index === 0 ? 0 : 10,\n                      }}\n                    >\n                      <Link to={`tags/${tag}`}>{` ${tag}${\n                        index === array.length - 1 ? \"\" : \", \"\n                      } `}</Link>\n                    </li>\n                  )\n                }\n              )}\n            </ul>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport \"./layout.css\"\nconst Layout = ({ children }) => {\n  return (\n    <div\n      style={{\n        marginBottom: \"2%\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          padding: \"5%\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <main>{children}</main>\n      </div>\n      <footer\n        className=\"nes-container is-dark\"\n        style={{\n          display: \"flex\",\n          position: \"fixed\",\n          flexDirection: \"row-reverse\",\n          justifyContent: \"space-between\",\n          height: \"60px\",\n          bottom: 0,\n          width: \"100%\",\n          margin: 0,\n          padding: 5,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignSelf: \"center\",\n            alignContent: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 0,\n              color: \"white\",\n              textDecoration: \"none\",\n              marginRight: \"20px\",\n            }}\n            to=\"/\"\n          >\n            HOME\n          </Link>\n          <button\n            style={{\n              color: \"white\",\n              backgroundColor: \"transparent\",\n              border: 0,\n            }}\n            onClick={() => window.history.back()}\n          >\n            BACK\n          </button>\n        </div>\n        <div\n          className=\"nes-field\"\n          style={{ alignSelf: \"center\", width: \"50%\" }}\n        >\n          <input\n            className=\"nes-input\"\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Search\"\n          />\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}