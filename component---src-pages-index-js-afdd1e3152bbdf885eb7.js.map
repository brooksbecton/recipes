{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","tags","group","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","className","style","marginBottom","slice","map","_ref","node","frontmatter","fields","slug","key","margin","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","_ref2","fieldValue","totalCount","tag","length","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","Layout","children","marginLeft","marginRight","padding","display","position","flexDirection","justifyContent","height","bottom","width","alignSelf","alignContent","color","textDecoration","backgroundColor","border","onClick","window","history","back","type","name","placeholder","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-afdd1e3152bbdf885eb7.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const tags = data.allMarkdownRemark.group || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n\n        <div\n          className=\"nes-container with-title\"\n          style={{ marginBottom: \"60px\" }}\n        >\n          <h2 className=\"title\">Recent Recipes</h2>\n          <ul>\n            {posts.slice(0, 9).map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug\n              return (\n                <li key={node.fields.slug}>\n                  <article>\n                    <header>\n                      <h3 style={{ margin: 0, marginBottom: \"3%\" }}>\n                        <Link\n                          style={{ boxShadow: `none` }}\n                          to={node.fields.slug}\n                        >\n                          {title}\n                        </Link>\n                      </h3>\n                    </header>\n                  </article>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n        <div\n          className=\"nes-container with-title\"\n          style={{ marginBottom: \"60px\" }}\n        >\n          <h2 className=\"title\">Tags</h2>\n          <ul>\n            {tags.slice(0, 9).map(({ fieldValue, totalCount }) => {\n              const tag = fieldValue\n              const tagPath = `/tags/`\n              return (\n                <li key={tagPath}>\n                  <article>\n                    <header>\n                      <h3 style={{ margin: 0, marginBottom: \"3%\" }}>\n                        <Link style={{ boxShadow: `none` }} to={tagPath}>\n                          {tag} ({totalCount})\n                        </Link>\n                      </h3>\n                    </header>\n                  </article>\n                </li>\n              )\n            })}\n            <li>\n              <article>\n                <header>\n                  <h3 style={{ margin: 0, marginBottom: \"3%\" }}>\n                    <Link style={{ boxShadow: `none` }} to=\"tags\">\n                      All Tags ({tags.length}) \n                    </Link>\n                  </h3>\n                </header>\n              </article>\n            </li>\n          </ul>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport \"./layout.css\"\nconst Layout = ({ children }) => {\n  return (\n    <div\n      style={{\n        marginBottom: \"2%\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          padding: \"5%\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <main>{children}</main>\n      </div>\n      <footer\n        className=\"nes-container is-dark\"\n        style={{\n          display: \"flex\",\n          position: \"fixed\",\n          flexDirection: \"row-reverse\",\n          justifyContent: \"space-between\",\n          height: \"60px\",\n          bottom: 0,\n          width: \"100%\",\n          margin: 0,\n          padding: 5,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignSelf: \"center\",\n            alignContent: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: 0,\n              color: \"white\",\n              textDecoration: \"none\",\n              marginRight: \"20px\",\n            }}\n            to=\"/\"\n          >\n            HOME\n          </Link>\n          <button\n            style={{\n              color: \"white\",\n              backgroundColor: \"transparent\",\n              border: 0,\n            }}\n            onClick={() => window.history.back()}\n          >\n            BACK\n          </button>\n        </div>\n        <div\n          className=\"nes-field\"\n          style={{ alignSelf: \"center\", width: \"50%\" }}\n        >\n          <input\n            className=\"nes-input\"\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Search\"\n          />\n        </div>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}