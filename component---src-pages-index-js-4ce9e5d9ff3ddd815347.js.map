{"version":3,"sources":["webpack:///./src/components/Tag.tsx","webpack:///./src/pages/index.js"],"names":["Tag","children","props","className","BlogIndex","render","data","this","siteTitle","site","siteMetadata","title","posts","allMdx","edges","tags","group","location","slice","map","fieldValue","totalCount","tag","key","style","boxShadow","to","length","node","frontmatter","fields","slug","excerpt","React","Component","pageQuery"],"mappings":"+LAEO,IAAMA,EAA+B,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,SAAaC,E,oIAAY,iBACpE,OACI,wCACQA,EADR,CAEIC,UAAU,2HAETF,K,0KCCPG,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKL,MAAdI,KACFE,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,OAAOC,MACpBC,EAAOT,EAAKO,OAAOG,OAAS,GAElC,OACE,kBAAC,IAAD,CAAQC,SAAUV,KAAKL,MAAMe,SAAUN,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,cAEX,yBAAKR,UAAU,qCACb,yBAAKA,UAAU,qBACb,oCACA,4BACGY,EAAKG,MAAM,EAAG,GAAGC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC7BC,EAAMF,EAEZ,OACE,wBAAIjB,UAAU,MAAMoB,IAFT,SAEwBD,GACjC,iCACE,gCACE,kBAAC,OAAD,CAAME,MAAO,CAAEC,UAAU,QAAWC,GAAE,SAAWJ,GAC/C,kBAAC,IAAD,SACIA,EADJ,KACWD,EADX,YASZ,wBAAIlB,UAAU,QACZ,iCACE,gCACE,2BACE,kBAAC,OAAD,CACEA,UAAU,UACVqB,MAAO,CAAEC,UAAU,QACnBC,GAAG,SAHL,aAKaX,EAAKY,OALlB,WAcZ,6BACE,8CACA,wBAAIxB,UAAU,+CACXS,EAAMM,MAAM,EAAG,GAAGC,KAAI,YAAe,IAAZS,EAAW,EAAXA,KAClBjB,EAAQiB,EAAKC,YAAYlB,OAASiB,EAAKE,OAAOC,KACpD,OACE,wBAAI5B,UAAU,gBAAgBoB,IAAKK,EAAKE,OAAOC,MAC7C,6BAAS5B,UAAU,wEACjB,gCACE,uBAAGA,UAAU,0BACX,kBAAC,OAAD,CACEqB,MAAO,CAAEC,UAAU,QACnBC,GAAIE,EAAKE,OAAOC,MAEfpB,KAIP,kBAAC,OAAD,CAAMa,MAAO,CAAEC,UAAU,QAAWC,GAAIE,EAAKE,OAAOC,MAClD,uBAAG5B,UAAU,2BACVyB,EAAKI,QAAQd,MAAM,GAAIU,EAAKI,QAAQL,UAGzC,6BACGC,EAAKC,YAAYd,KAAKI,KAAI,SAAAG,GACzB,OACE,kBAAC,OAAD,CACEE,MAAO,CAAEC,UAAU,QACnBC,GAAE,SAAWJ,GAEb,kBAAC,IAAD,CAAKC,IAAKD,GAAV,IAAiBA,kB,GAhFvBW,IAAMC,WAiGf9B,YAER,IAAM+B,EAAS","file":"component---src-pages-index-js-4ce9e5d9ff3ddd815347.js","sourcesContent":["\r\nimport * as React from 'react';\r\nexport const Tag: React.FunctionComponent = ({ children, ...props }) => {\r\n    return (\r\n        <span\r\n            {...props}\r\n            className=\" cursor-pointer inline-block hover:bg-green-200 bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-800\"\r\n        >\r\n            {children}\r\n        </span>\r\n    )\r\n}","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { Tag } from \"../components/Tag\"\r\n\r\nimport './index.css'\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMdx.edges\r\n    const tags = data.allMdx.group || []\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"All posts\" />\r\n\r\n        <div className=\"flex flex-col-reverse lg:flex-row\">\r\n          <div className=\"lg:pr-12 lg:w-1/3\">\r\n            <h2>Tags</h2>\r\n            <ul>\r\n              {tags.slice(0, 9).map(({ fieldValue, totalCount }) => {\r\n                const tag = fieldValue\r\n                const tagPath = `/tags/`\r\n                return (\r\n                  <li className=\"m-5\" key={tagPath + tag}>\r\n                    <article>\r\n                      <header>\r\n                        <Link style={{ boxShadow: `none` }} to={`/tags/${tag}`}>\r\n                          <Tag>\r\n                            #{tag} ({totalCount})\r\n                          </Tag>\r\n                        </Link>\r\n                      </header>\r\n                    </article>\r\n                  </li>\r\n                )\r\n              })}\r\n              <li className=\"mt-3\">\r\n                <article>\r\n                  <header>\r\n                    <p>\r\n                      <Link\r\n                        className=\"text-xl\"\r\n                        style={{ boxShadow: `none` }}\r\n                        to=\"/tags\"\r\n                      >\r\n                        All Tags ({tags.length})\r\n                      </Link>\r\n                    </p>\r\n                  </header>\r\n                </article>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div>\r\n            <h2>Recent Recipes</h2>\r\n            <ul className=\"lg:flex lg:flex-row lg:w-full lg:flex-wrap \">\r\n              {posts.slice(0, 9).map(({ node }) => {\r\n                const title = node.frontmatter.title || node.fields.slug\r\n                return (\r\n                  <li className=\"lg:1/5 lg:p-5\" key={node.fields.slug}>\r\n                    <article className=\"mb-6 p-5 max-w-sm rounded overflow-hidden hover:shadow-2xl shadow-lg\">\r\n                      <header>\r\n                        <p className=\"font-bold text-xl mb-2\">\r\n                          <Link\r\n                            style={{ boxShadow: `none` }}\r\n                            to={node.fields.slug}\r\n                          >\r\n                            {title}\r\n                          </Link>\r\n                        </p>\r\n                      </header>\r\n                      <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                        <p className=\"text-gray-700 text-base\">\r\n                          {node.excerpt.slice(19, node.excerpt.length)}\r\n                        </p>\r\n                      </Link>\r\n                      <div>\r\n                        {node.frontmatter.tags.map(tag => {\r\n                          return (\r\n                            <Link\r\n                              style={{ boxShadow: `none` }}\r\n                              to={`/tags/${tag}`}\r\n                            >\r\n                              <Tag key={tag}>#{tag}</Tag>\r\n                            </Link>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    </article>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}